/*
load(['./antlr4/r.js']);
load(['CADLLexer.js']);
load(['CADLParser.js']);
load(['CADLListener.js']);
load(['CADLVisitor.js']);
*/

/*
require(['CADLLexer.js']);
require(['CADLParser.js']);
require(['CADLListener.js']);
require(['CADLVisitor.js']);
load(['./antlr4/r.js']);
*/

var antlr4   =require('antlr4/index.js');
var glexer   = require('./gen/CADLLexer.js');
var gparser  = require('./gen/CADLParser.js');
var glistener= require('./gen/CADLListener.js');
var gvisitor = require('./gen/CADLVisitor.js');

console.log("(* File automatically generated by CADL *)");
console.log("open CadlLib");

if (0) {
    var test_ctx = ["let vA = 1;",
                    "let vB = 0x0a;"].join("\n");
    test_ctx.replace(/\n*$/,"");
    console.log("<================test_ctx start===============>");
    console.log(test_ctx);
    console.log("<================test_ctx end=================>\n");
    var input = new antlr4.InputStream(test_ctx);
} else {
    var input = new antlr4.FileStream("CADL.input");
}
var lexer = new glexer.CADLLexer(input);
var tokens = new antlr4.CommonTokenStream(lexer);
var parser = new gparser.CADLParser(tokens);
parser.buildParseTrees = true;
var tree = parser.program();

if (0) {
    console.log("tree:\n"+tree.toStringTree()+"\n");
}
console.log("\n(*INFO: Work DONE!*)\n");
